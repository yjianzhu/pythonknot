name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows you to run the workflow manually from the Actions tab

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04] # [ubuntu-22.04,ubuntu-20.04,ubuntu-18.04,macos-latest,windows-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pybind11[global] numpy
        if [ "$RUNNER_OS" == "Windows" ]; then
          choco install make
        fi
    - name: Install C++ dependencies
      run: |
        pwd
        sudo apt install libeigen3-dev
    
    - name: Build C++ code 
      run: |
        cd ${GITHUB_WORKSPACE}/src/cpp_module/cln/
        ./autogen.sh
        mkdir build
        ./configure --with-gmp --prefix=$(pwd)/build  CFLAGS="-g -O2 -fPIC" CXXFLAGS="-g -O2 -fPIC"
        make -j 10
        make install

        cd ${GITHUB_WORKSPACE}/src/cpp_module/ginac/
        mkdir build
        cd build
        cmake ..
        make -j 5
        cd ${GITHUB_WORKSPACE}

    - name: Build wheel
      run: |
        python setup.py bdist_wheel

    - name: Show the wheel with auditwheel-symbols
      run: |
        pip install auditwheel-symbols
        auditwheel-symbols --manylinux 2_35 dist/*.whl

    - name: Repair wheel
      run: |
        pip install auditwheel
        auditwheel repair --plat manylinux_2_35_x86_64 dist/*.whl -w output_dir

    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: output_dir, dist

    # - name: Install the package from wheel
    #   run: |
    #     pip install dist/*.whl

    # - name: Test the installation
    #   run: |
    #     # Replace with your package's test command
    #     python -m unittest discover tests

    # - name: Upload wheel to PyPI
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   uses: pypa/gh-action-pypi-publish@v1.4.2
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
